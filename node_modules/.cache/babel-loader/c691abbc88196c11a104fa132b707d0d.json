{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react\\\\new\\\\react-task-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(async () => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // Fetch Start\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    console.log(data);\n    return data;\n  }; // fetch task\n\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    console.log(data);\n    return data;\n  }; // delete Task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Toggle Reminder\n\n\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !data.reminder\n    } : task));\n  }; // Add task event\n\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // const id = Math.floor(Math.random() *\n    // 1000) + 1\n    // const newTask = {\n    //   id, ...task\n    // }\n    // setTasks([...tasks,newTask])\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        onDelete: deleteTask,\n        onToggle: toggleReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 27\n      }, this) : 'No Task to show', /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}; // class App extends React.Component {\n//   render() {\n//     return <h1>\n//       Hello from a class\n//     </h1>\n//   }\n// }\n\n\n_s(App, \"sLbY4zH5g1aqRdQMF9/7piFh9Hw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/react/new/react-task-tracker/src/App.js"],"names":["logo","React","Header","Tasks","AddTask","Footer","About","useState","useEffect","BrowserRouter","Router","Route","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","console","log","fetchTask","id","deleteTask","method","filter","task","toggleReminder","taskToToggle","updTask","reminder","headers","body","JSON","stringify","map","addTask","length"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\nimport {useState,useEffect} from 'react'\nimport { BrowserRouter as Router,Route} from 'react-router-dom'\n\n\n\nconst App = () => {\n  const [showAddTask,setShowAddTask] = useState(false)\n\n  const [tasks,setTasks] = useState([])\n  useEffect( async() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n\n  },[])\n\n\n\n  // Fetch Start\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    console.log(data)\n    return data;\n  }\n\n// fetch task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    console.log(data)\n    return data;\n  }\n\n\n  // delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n// Toggle Reminder\n\nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updTask = {...taskToToggle,\n  reminder: !taskToToggle.reminder}\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`,\n  {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(updTask)\n  })\n  const data = await res.json()\n\n setTasks(\n   tasks.map((task) => task.id === id ?\n  {...task, reminder : !data.reminder} : task)\n  )\n}\n\n// Add task event\nconst addTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks',\n  {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  })\n\n  const data =  await res.json() \n  setTasks([...tasks,data])\n  // const id = Math.floor(Math.random() *\n  // 1000) + 1\n  // const newTask = {\n  //   id, ...task\n  // }\n  // setTasks([...tasks,newTask])\n}\n  return (\n    <Router>\n<div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} \n      onToggle={toggleReminder}/> : 'No Task to show'}\n      <Route path=\"/about\" component={About}/>\n      <Footer/>\n    </div>\n    </Router>\n    \n  )\n\n}\n\n// class App extends React.Component {\n//   render() {\n//     return <h1>\n//       Hello from a class\n//     </h1>\n//   }\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}