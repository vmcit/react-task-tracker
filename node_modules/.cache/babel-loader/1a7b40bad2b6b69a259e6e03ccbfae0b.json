{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react\\\\new\\\\react-task-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'aaa',\n    day: 'Feb 5th at 2:30pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'BB',\n    day: 'Feb 5th at 2:30pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'CCC',\n    day: 'Feb 5th at 2:30pm',\n    reminder: false\n  }]); // delete Task\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  }; // Add task event\n\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 27\n    }, this) : 'No Task to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}; // class App extends React.Component {\n//   render() {\n//     return <h1>\n//       Hello from a class\n//     </h1>\n//   }\n// }\n\n\n_s(App, \"3q7RFUJaToIl1Pej6G2iKEDrzNk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/react/new/react-task-tracker/src/App.js"],"names":["logo","React","Header","Tasks","AddTask","useState","App","showAddTask","setShowAddTask","tasks","setTasks","id","text","day","reminder","deleteTask","filter","task","toggleReminder","map","addTask","Math","floor","random","newTask","length"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BH,QAAQ,CAAC,KAAD,CAA7C;AAEA,QAAM,CAACI,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,CAChC;AACIM,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAG,KAFX;AAGIC,IAAAA,GAAG,EAAG,mBAHV;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GADgC,EAOhC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAG,IAFX;AAGIC,IAAAA,GAAG,EAAG,mBAHV;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAPgC,EAahC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAG,KAFX;AAGIC,IAAAA,GAAG,EAAG,mBAHV;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAbgC,CAAD,CAAjC,CAHgB,CAyBhB;;AACA,QAAMC,UAAU,GAAIJ,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CA1BgB,CA6BlB;;;AAEA,QAAMO,cAAc,GAAIP,EAAD,IAAQ;AAC9BD,IAAAA,QAAQ,CACND,KAAK,CAACU,GAAN,CAAWF,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAZ,GACrB,EAAC,GAAGM,IAAJ;AAAUH,MAAAA,QAAQ,EAAG,CAACG,IAAI,CAACH;AAA3B,KADqB,GACkBG,IADtC,CADM,CAAR;AAIA,GALD,CA/BkB,CAsClB;;;AACA,QAAMG,OAAO,GAAIH,IAAD,IAAU;AAExB,UAAMN,EAAE,GAAGU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KACtB,IADW,IACH,CADR;AAEA,UAAMC,OAAO,GAAG;AACdb,MAAAA,EADc;AACV,SAAGM;AADO,KAAhB;AAGAP,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUe,OAAV,CAAD,CAAR;AAED,GATD;;AAUE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMhB,cAAc,CAAC,CAACD,WAAF,CAAnC;AAAmD,MAAA,OAAO,EAAEA;AAA5D;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEa;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFlB,EAIGX,KAAK,CAACgB,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEhB,KAAd;AAAqB,MAAA,QAAQ,EAAEM,UAA/B;AACpB,MAAA,QAAQ,EAAEG;AADU;AAAA;AAAA;AAAA;AAAA,YAAnB,GAC6B,iBALhC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA7DD,C,CA+DA;AACA;AACA;AACA;AACA;AACA;AACA;;;GArEMZ,G;;KAAAA,G;AAuEN,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport {useState} from 'react'\n\n\n\nconst App = () => {\n  const [showAddTask,setShowAddTask] = useState(false)\n\n  const [tasks,setTasks] = useState([\n    {\n        id: 1,\n        text : 'aaa',\n        day : 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text : 'BB',\n        day : 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text : 'CCC',\n        day : 'Feb 5th at 2:30pm',\n        reminder: false,\n    }\n  \n  ])\n\n  // delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n// Toggle Reminder\n\nconst toggleReminder = (id) => {\n setTasks(\n   tasks.map((task) => task.id === id ?\n  {...task, reminder : !task.reminder} : task)\n  )\n}\n\n// Add task event\nconst addTask = (task) => {\n\n  const id = Math.floor(Math.random() *\n  1000) + 1\n  const newTask = {\n    id, ...task\n  }\n  setTasks([...tasks,newTask])\n\n}\n  return (\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      \n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} \n      onToggle={toggleReminder}/> : 'No Task to show'}\n      \n      \n    </div>\n\n  )\n}\n\n// class App extends React.Component {\n//   render() {\n//     return <h1>\n//       Hello from a class\n//     </h1>\n//   }\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}